# Activation de CORS
quarkus.http.cors=true
quarkus.live-reload.enabled=false
quarkus.datasource.jdbc.detect-stalled-connections=false

quarkus.http.static-resources.index-page=index_state_machine.html

# Autoriser toutes les origines
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# Enable metrics
quarkus.metrics.enabled=true

# Enable endpoint for Prometheus or other scraping tools
quarkus.http.root-path=/
quarkus.metrics.endpoint.enabled=true
quarkus.metrics.endpoint.path=/metrics

# Set log levels
quarkus.log.category."ma.devoxx".level=DEBUG
quarkus.langchain4j.openai.chat-model.log-requests = true
quarkus.langchain4j.openai.chat-model.log-responses = true
quarkus.log.console.enable = true
quarkus.log.category."dev.langchain4j".level=DEBUG

# Model info
quarkus.langchain4j.openai.api-key=${OPENAI_API_KEY}
quarkus.langchain4j.openai.chat-model.model-name=gpt-4o
quarkus.langchain4j.chat-model.provider=openai
quarkus.langchain4j.chat-memory.memory-window.max-messages=20
quarkus.langchain4j.openai.*.timeout=90s

# WebSearch
quarkus.langchain4j.tavily.api-key=${TAVILY_API_KEY}
quarkus.langchain4j.tavily.max-results=5

quarkus.langchain4j.cohere.api-key=${COHERE_API_KEY}
quarkus.qute.timeout=15000
quarkus.rest-client.read-timeout=30000
quarkus.thread-pool.shutdown-interrupt=15

quarkus.vertx-http.client.connect-timeout=30000  # Connection timeout
quarkus.vertx-http.client.idle-timeout=90       # Idle timeout in seconds
quarkus.vertx-http.client.idle-timeout-unit=SECONDS

quarkus.langchain4j.openai.timeout=20000
